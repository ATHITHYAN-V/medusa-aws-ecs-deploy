name: Deploy Medusa Store to AWS ECS

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Set ECR image URI
        id: vars
        run: |
          echo "REPO_URI=$(aws ecr describe-repositories --repository-names medusa-store --region us-east-1 --query 'repositories[0].repositoryUri' --output text)" >> $GITHUB_ENV

      - name: Build, tag, and push Docker image to ECR
        run: |
          docker build -t $REPO_URI:latest .
          docker push $REPO_URI:latest

      - name: Update ECS Task Definition with new ECR image
        id: update-task-def
        run: |
          TASK_DEF=$(aws ecs describe-task-definition --task-definition medusa-task)
          NEW_TASK_DEF=$(echo "$TASK_DEF" | jq \
            --arg IMAGE "$REPO_URI:latest" \
            '.taskDefinition |
            .containerDefinitions[0].image = $IMAGE |
            del(.taskDefinitionArn, .revision, .status, .requiresAttributes, .compatibilities, .registeredAt, .registeredBy)')
          echo "$NEW_TASK_DEF" > new-task-def.json
          NEW_ARN=$(aws ecs register-task-definition --cli-input-json file://new-task-def.json | jq -r '.taskDefinition.taskDefinitionArn')
          echo "task_definition_arn=$NEW_ARN" >> $GITHUB_OUTPUT

      - name: Deploy updated task to ECS
        run: |
          aws ecs update-service \
            --cluster medusa-cluster \
            --service medusa-service \
            --task-definition ${{ steps.update-task-def.outputs.task_definition_arn }} \
            --force-new-deployment
